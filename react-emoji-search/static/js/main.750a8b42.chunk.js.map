{"version":3,"sources":["components/Header.js","components/Search.js","components/Item.js","components/Results.js","components/Container.js","App.js","index.js"],"names":["Header","className","role","aria-label","href","data-color-scheme","data-icon","data-size","data-show-count","Search","props","type","placeholder","onChange","e","target","value","Item","useState","fadeIn","setFadeIn","key","id","title","onClick","setTimeout","data-clipboard-text","symbol","data-keywords","keywords","Results","useEffect","clipboard","Clipboard","destroy","emojiFiltered","slice","map","emoji","uuidv4","Container","emojiData","setEmojiData","newEmojiData","setNewEmojiData","searchQuery","setSearchQuery","data","val","toLowerCase","queryKeywords","trim","split","newEmojis","queryLength","length","queryLengthSum","console","log","forEach","item","index","removeDuplicates","Set","query","queryIndex","keyword","indexOf","push","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAsBeA,MAnBf,WAEE,OACE,yBAAKC,UAAU,UACb,4CACe,0BAAMC,KAAK,MAAMC,aAAW,iBAA5B,iBAEf,4EAGA,2BACI,kBAAC,IAAD,CAAcC,KAAK,kDAAkDC,oBAAkB,mDAAmDC,YAAU,eAAeC,YAAU,QAAQC,kBAAgB,OAAOL,aAAW,+CAAvN,QADJ,WAGI,kBAAC,IAAD,CAAcC,KAAK,uDAAuDC,oBAAkB,mDAAmDC,YAAU,sBAAsBC,YAAU,QAAQC,kBAAgB,OAAOL,aAAW,+CAAnO,WCAKM,MAdf,SAAgBC,GAId,OACE,2BACET,UAAU,SACVU,KAAK,OACLC,YAAY,0BACZC,SARa,SAAAC,GACfJ,EAAMG,SAASC,EAAEC,OAAOC,WCyBbC,MA3Bf,SAAcP,GAAQ,IAAD,EACSQ,oBAAS,GADlB,mBACZC,EADY,KACJC,EADI,KAMnB,OACE,yBACEC,IAAKX,EAAMY,GACXrB,UAAU,OACVsB,MAAM,uCACNC,QATgB,SAAAV,GAClBM,GAAU,GACVK,YAAW,kBAAML,GAAU,KAAQ,MAQjCM,sBAAqBhB,EAAMiB,OAC3BC,gBAAelB,EAAMmB,UAErB,yBAAK5B,UAAS,oBAAekB,EAAO,aAAa,gBAAjD,WAGA,0BACElB,UAAU,cAETS,EAAMiB,U,wBCFAG,MAhBf,SAAiBpB,GAOf,OANAqB,qBAAU,WACR,IAAMC,EAAY,IAAIC,IAAU,SAChC,OAAO,WACHD,EAAUE,cAId,yBAAKjC,UAAU,WACZS,EAAMyB,cAAcC,MAAM,EAAG,KAAKC,KAAI,SAACC,GAAD,OACrC,kBAAC,EAAD,CAAMhB,GAAIiB,cAAUZ,OAAQW,EAAMX,OAAQJ,MAAOe,EAAMf,MAAOM,SAAUS,EAAMT,gB,OC4CvEW,MApDf,WAAsB,IAAD,EACetB,mBAAS,IADxB,mBACZuB,EADY,KACDC,EADC,OAEqBxB,mBAAS,IAF9B,mBAEZyB,EAFY,KAEEC,EAFF,OAGmB1B,mBAAS,IAH5B,mBAGZ2B,EAHY,KAGCC,EAHD,KA2CnB,OAtCAf,qBAAU,WACRW,EAAaK,KACZ,IAqCD,yBAAK9C,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAQY,SAtCK,SAAAmC,GACfF,EAAeE,EAAIC,eAEnB,IAAIC,EAAgBF,EAAIC,cAAcE,OAAOC,MAAM,KAE/CC,EAAY,GAEZC,EAAcJ,EAAcK,OAE5BC,EAAiB,EAErBC,QAAQC,IAAI,0BAGa,IAArBV,EAAIC,eACNR,EAAUkB,SAAQ,SAACC,EAAMC,GACvB,IAAIC,EAAgB,YAAO,IAAIC,IAAIH,EAAK/B,SAASsB,OAAOC,MAAM,OAC9DI,EAAiB,EACjBN,EAAcS,SAAQ,SAACK,EAAOC,GAC5BH,EAAiBH,SAAQ,SAAAO,GACQ,IAA3BA,EAAQC,QAAQH,IAClBR,UAKFF,GAAeE,GACjBH,EAAUe,KAAKR,MAMrBhB,EAAgBS,MAMd,kBAAC,EAAD,CAASlB,cAA+B,KAAhBU,EAAqBJ,EAAYE,MC5ChD0B,MANf,WACE,OACE,kBAAC,EAAD,OCFJC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.750a8b42.chunk.js","sourcesContent":["import React from 'react'\r\nimport GitHubButton from 'react-github-btn'\r\n\r\nfunction Header() {\r\n  \r\n  return (\r\n    <div className=\"header\">\r\n      <h1>\r\n        Emoji Search <span role=\"img\" aria-label=\"Unicorn Emoji\">ðŸ¦„</span>\r\n      </h1>\r\n      <p>\r\n        A simple emoji search tool made with ReactJS.\r\n      </p>\r\n      <p>\r\n          <GitHubButton href=\"https://github.com/BraydenTW/react-emoji-search\" data-color-scheme=\"no-preference: light; light: light; dark: light;\" data-icon=\"octicon-star\" data-size=\"large\" data-show-count=\"true\" aria-label=\"Star BraydenTW/react-emoji-search on GitHub\">Star</GitHubButton>\r\n          &nbsp;&nbsp;\r\n          <GitHubButton href=\"https://github.com/BraydenTW/react-emoji-search/fork\" data-color-scheme=\"no-preference: light; light: light; dark: light;\" data-icon=\"octicon-repo-forked\" data-size=\"large\" data-show-count=\"true\" aria-label=\"Fork BraydenTW/react-emoji-search on GitHub\">Fork</GitHubButton>\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nfunction Search(props) {\r\n  const onChange = e => {\r\n    props.onChange(e.target.value)\r\n  }\r\n  return (\r\n    <input\r\n      className=\"search\"\r\n      type=\"text\"\r\n      placeholder=\"Search for a keyword...\"\r\n      onChange={onChange}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Search\r\n","import React, {useState} from 'react'\r\n\r\nfunction Item(props) {\r\n  const [fadeIn, setFadeIn] = useState(false);\r\n  const handleClick = e => {\r\n    setFadeIn(true)\r\n    setTimeout(() => setFadeIn(false), 900)\r\n  }\r\n  return (\r\n    <div\r\n      key={props.id}\r\n      className=\"item\"\r\n      title=\"Copy Emoji to Clipboard ðŸ“‹\"\r\n      onClick={handleClick}\r\n      data-clipboard-text={props.symbol}\r\n      data-keywords={props.keywords}\r\n    >\r\n      <div className={`item-copy ${fadeIn?'label-true':'label-false'}`}>\r\n        Copied!\r\n      </div>\r\n      <span\r\n        className=\"item-emoji\"\r\n      >\r\n        {props.symbol}\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Item\r\n","import React, { useEffect } from 'react'\r\nimport Item from './Item.js'\r\nimport Clipboard from \"clipboard\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nfunction Results(props) {\r\n  useEffect(() => {\r\n    const clipboard = new Clipboard(\".item\");\r\n    return () => {\r\n        clipboard.destroy();\r\n    };\r\n  })\r\n  return (\r\n    <div className=\"results\">\r\n      {props.emojiFiltered.slice(0, 100).map((emoji) => (\r\n        <Item id={uuidv4()} symbol={emoji.symbol} title={emoji.title} keywords={emoji.keywords} />\r\n\t\t\t))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Results","import React, { useState, useEffect } from 'react'\r\nimport Header from './Header.js'\r\nimport Search from './Search.js'\r\nimport Results from './Results.js'\r\n\r\nimport data from './data.json'\r\n\r\nfunction Container() {\r\n  const [emojiData, setEmojiData] = useState([]);\r\n  const [newEmojiData, setNewEmojiData] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setEmojiData(data);\r\n  }, [])\r\n  const onChange = val => {\r\n    setSearchQuery(val.toLowerCase());\r\n\r\n    let queryKeywords = val.toLowerCase().trim().split(\" \");\r\n\r\n    let newEmojis = []\r\n\r\n    let queryLength = queryKeywords.length;\r\n\r\n    let queryLengthSum = 0;\r\n\r\n    console.log(\"\\n\\n\\n NEW LINE \\n\\n\\n\")\r\n\r\n\r\n    if (val.toLowerCase() != \"\") {\r\n      emojiData.forEach((item, index) => {\r\n        let removeDuplicates = [...new Set(item.keywords.trim().split(\" \"))];\r\n        queryLengthSum = 0;\r\n        queryKeywords.forEach((query, queryIndex) => {\r\n          removeDuplicates.forEach(keyword => {\r\n            if (keyword.indexOf(query) === 0) {\r\n              queryLengthSum++;\r\n            }\r\n          })\r\n        })\r\n  \r\n        if (queryLength <= queryLengthSum) {\r\n          newEmojis.push(item)\r\n        }\r\n  \r\n      })\r\n    }\r\n\r\n    setNewEmojiData(newEmojis)\r\n  }\r\n  return (\r\n    <div className=\"container\">\r\n      <Header />\r\n      <Search onChange={onChange} />\r\n      <Results emojiFiltered={searchQuery === \"\" ? emojiData : newEmojiData} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Container","import React from 'react';\r\nimport './App.css';\r\nimport Container from './components/Container'\r\n\r\nfunction App() {\r\n  return (\r\n    <Container />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}